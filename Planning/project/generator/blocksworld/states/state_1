objects={b1,b2,b3,b4,b5,b6,b7,b8,b9,b10}
// domain declarations
objects={b1,b2,b3,b4,b5,b6,b7,b8,b9,b10}


// predicate declarations
clear(x)
move-b-to-b(?bm,?bf,?bt)
move-b-to-t(?bm,?bf)
move-t-to-b(?bm,?bt)
on(x,y)
on-table(x)

// formulas
1.695956    move-b-to-b(?bm,?bf,?bt) => (on(?bm,?bt) ^ clear(?bm) ^ clear(?bt) ^ on(?bm,?bf))
1.695956    move-b-to-b(?bm,?bf,?bt) => (clear(?bf) ^ clear(?bm) ^ clear(?bt) ^ on(?bm,?bf))
1.695956    move-b-to-b(?bm,?bf,?bt) => (clear(?bt) ^ clear(?bm) ^ clear(?bt) ^ on(?bm,?bf))
1.695956    move-b-to-b(?bm,?bf,?bt) => (on(?bm,?bf) ^ clear(?bm) ^ clear(?bt) ^ on(?bm,?bf))
2.177765    move-b-to-t(?bm,?bf) => (on-table(?bm) ^ clear(?bm) ^ on(?bm,?bf))
2.177765    move-b-to-t(?bm,?bf) => (clear(?bf) ^ clear(?bm) ^ on(?bm,?bf))
2.177765    move-b-to-t(?bm,?bf) => (on(?bm,?bf) ^ clear(?bm) ^ on(?bm,?bf))
2.177765    move-t-to-b(?bm,?bt) => (on(?bm,?bt) ^ clear(?bm) ^ clear(?bt) ^ on-table(?bm))
2.177765    move-t-to-b(?bm,?bt) => (clear(?bt) ^ clear(?bm) ^ clear(?bt) ^ on-table(?bm))
2.177765    move-t-to-b(?bm,?bt) => (on-table(?bm) ^ clear(?bm) ^ clear(?bt) ^ on-table(?bm))


(define (problem BW-rand-10)
(:domain blocksworld)
(:objects b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 )
(:init
(on b1 b10)
(on b2 b8)
(on-table b3)
(on-table b4)
(on b5 b6)
(on-table b6)
(on-table b7)
(on b8 b7)
(on b9 b4)
(on b10 b2)
(clear b1)
(clear b3)
(clear b5)
(clear b9)
)
(:goal
(and
(on b1 b9)
(on b2 b4)
(on b4 b5)
(on b5 b10)
(on b6 b2)
(on b7 b8)
(on b8 b3)
(on b9 b6)
(on b10 b7))
)
)


