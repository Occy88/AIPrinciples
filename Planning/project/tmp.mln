// predicate declarations move_b_to_b(object,object,object)
t = {-1,0,1}

unlock(pos,pos,key,shape)
move(pos,pos)
pickup(pos,key)
pickup_and_loose(pos,key,key)
putdown(pos,key)
conn(pos,pos,t)
key_shape(key,shape,t)
lock_shape( pos,shape,t)
at(robot,pos,t)
at_robot(pos,t)
place(pos,t)
key(key,t)
shape(shape,t)
locked(pos,t)
holding(key,t)
open(pos,t)
arm_empty(t)


// formulas: 
13.568111890404262    putdown(V0, V1) => at_robot(V0, 0)
13.568111890404264    putdown(V0, V1) => at(V1, V0, 1)
7.507647748034492    putdown(V0, V1) => open(F3_4f, 0)
9.729330519610064    putdown(V0, V1) => holding(V1, 0)
8.078227120880348    putdown(V0, V1) => lock_shape(F4_2f, Shape13, 0)
9.729330519610063    putdown(V0, V1) => holding(V1, -1)
5.319969775970006    putdown(V0, V1) => lock_shape(F0_4f, Shape13, 0)
8.346555177481474e-16    putdown(V0, V1) => locked(F2_3f, 0)
1.6511033987297192    putdown(V0, V1) => lock_shape(F2_3f, Shape13, 0)
8.34655517748147e-16    putdown(V0, V1) => lock_shape(F3_3f, Shape13, 0)
0.0    putdown(V0, V1) => locked(F4_0f, 0)
0.0    putdown(V0, V1) => lock_shape(F4_0f, Shape13, 0)
0.0    putdown(V0, V1) => at(Key13_1, F3_0f, 0)
