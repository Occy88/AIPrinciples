// predicate declarations move_b_to_b(object,object,object)
t = {-1,0,1}

unlock(pos,pos,key,shape)
move(pos,pos)
pickup(pos,key)
pickup_and_loose(pos,key,key)
putdown(pos,key)
conn(pos,pos,t)
key_shape(key,shape,t)
lock_shape( pos,shape,t)
at(robot,pos,t)
at_robot(pos,t)
place(pos,t)
key(key,t)
shape(shape,t)
locked(pos,t)
holding(key,t)
open(pos,t)
arm_empty(t)


// formulas: 
76.15268367819928    move(V0, V1) => at_robot(V1, 1)
61.864862008270734    move(V0, V1) => holding(Key3_0, 0)
76.15268367819924    move(V0, V1) => open(V1, 0)
76.15268367819924    move(V0, V1) => at_robot(V0, -1)
75.1594061025856    move(V0, V1) => at(Key3_1, F4_2f, 0)
76.15268367819924    move(V0, V1) => at_robot(V0, 0)
70.1618103972347    move(V0, V1) => at(Key3_0, F4_3f, 0)
67.62659185765854    move(V0, V1) => lock_shape(F1_2f, Shape3, 0)
63.57012467786943    move(V0, V1) => locked(F3_0f, 0)
69.38941986949965    move(V0, V1) => at(Key3_0, F4_2f, 0)
69.54296187786011    move(V0, V1) => at(Key3_1, F2_1f, 0)
63.39495513416159    move(V0, V1) => lock_shape(F2_3f, Shape3, 0)
63.394955134161776    move(V0, V1) => lock_shape(V1, Shape3, 0)
