// predicate declarations move_b_to_b(object,object,object)
t = {-1,0,1}

unlock(pos,pos,key,shape)
move(pos,pos)
pickup(pos,key)
pickup_and_loose(pos,key,key)
putdown(pos,key)
conn(pos,pos,t)
key_shape(key,shape,t)
lock_shape( pos,shape,t)
at(robot,pos,t)
at_robot(pos,t)
place(pos,t)
key(key,t)
shape(shape,t)
locked(pos,t)
holding(key,t)
open(pos,t)
arm_empty(t)


// formulas: 
189.82174503778128    move(V0, V1) => at_robot(V0, -1)
189.82174503778128    move(V0, V1) => at_robot(V1, 1)
189.82174503778134    move(V0, V1) => at_robot(V0, 0)
162.95027544221625    move(V0, V1) => at(Key3_1, V1, 0)
109.88416028557701    move(V0, V1) => at(Key3_1, V0, 0)
107.49256252044756    move(V0, V1) => at(Key3_0, V1, 0)
6.604413594918877    move(V0, V1) => lock_shape(V0, Shape3, 0)
0.0    move(V0, V1) => lock_shape(F0_2f, Shape3, 0)
0.0    move(V0, V1) => locked(F0_2f, 0)
