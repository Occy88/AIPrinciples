// predicate declarations move_b_to_b(object,object,object)
t = {-1,0,1}

unlock(pos,pos,key,shape)
move(pos,pos)
pickup(pos,key)
pickup_and_loose(pos,key,key)
putdown(pos,key)
conn(pos,pos,t)
key_shape(key,shape,t)
lock_shape( pos,shape,t)
at(robot,pos,t)
at_robot(pos,t)
place(pos,t)
key(key,t)
shape(shape,t)
locked(pos,t)
holding(key,t)
open(pos,t)
arm_empty(t)


// formulas: 
75.45638461056184    move(V0, V1) => at(Key3_1, V1, 0)
29.34029783205222    move(V0, V1) => open(F1_2f, 0)
75.45638461056181    move(V0, V1) => lock_shape(V0, Shape3, 0)
75.45638461056181    move(V0, V1) => at_robot(V0, 0)
75.45638461056181    move(V0, V1) => at_robot(V1, 1)
75.45638461056181    move(V0, V1) => at_robot(V0, -1)
67.2482692675803    move(V0, V1) => locked(F4_1f, 0)
66.17163481463146    move(V0, V1) => lock_shape(F4_1f, Shape3, 0)
71.78751823332162    move(V0, V1) => open(V0, 0)
70.48622558830884    move(V0, V1) => lock_shape(F0_0f, Shape3, 0)
70.86442578873323    move(V0, V1) => at(Key3_0, F1_0f, 0)
67.30619968263403    move(V0, V1) => at(Key3_0, V0, 0)
61.56237451030384    move(V0, V1) => at(Key3_0, F0_4f, 0)
